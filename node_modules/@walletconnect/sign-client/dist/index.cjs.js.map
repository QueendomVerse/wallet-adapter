{"version":3,"file":"index.cjs.js","sources":["../../../node_modules/events/events.js","../src/constants/client.ts","../src/constants/expirer.ts","../src/constants/history.ts","../src/constants/pairing.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/controllers/engine.ts","../src/controllers/expirer.ts","../src/controllers/history.ts","../src/controllers/pairing.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  pairing_ping: \"pairing_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  pairing_delete: \"pairing_delete\",\n  pairing_expire: \"pairing_expire\",\n  session_request: \"session_request\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const EXPIRER_CONTEXT = \"expirer\";\n\nexport const EXPIRER_EVENTS = {\n  created: \"expirer_created\",\n  deleted: \"expirer_deleted\",\n  expired: \"expirer_expired\",\n  sync: \"expirer_sync\",\n};\n\nexport const EXPIRER_STORAGE_VERSION = \"0.3\";\n\nexport const EXPIRER_DEFAULT_TTL = ONE_DAY;\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PAIRING_CONTEXT = \"pairing\";\n\nexport const PAIRING_DEFAULT_TTL = THIRTY_DAYS;\n","import { calcExpiry } from \"@walletconnect/utils\";\nimport { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = calcExpiry(THIRTY_DAYS);\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\nimport { calcExpiry } from \"@walletconnect/utils\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_DEFAULT_TTL = SEVEN_DAYS;\n\nexport const SESSION_EXPIRY = calcExpiry(SESSION_DEFAULT_TTL);\n","import { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_pairingDelete: {\n    req: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1000,\n    },\n    res: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1001,\n    },\n  },\n  wc_pairingPing: {\n    req: {\n      // ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1002,\n    },\n    res: {\n      // ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1003,\n    },\n  },\n  wc_sessionPropose: {\n    req: {\n      // ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      // ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      // ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      // ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      // ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n","import EventEmmiter from \"events\";\nimport { RELAYER_EVENTS, RELAYER_DEFAULT_PROTOCOL } from \"@walletconnect/core\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES } from \"@walletconnect/time\";\nimport {\n  IEngine,\n  EngineTypes,\n  IEngineEvents,\n  RelayerTypes,\n  EnginePrivate,\n  SessionTypes,\n  JsonRpcTypes,\n  ExpirerTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  formatUri,\n  generateRandomBytes32,\n  parseUri,\n  parseExpirerTarget,\n  createDelayedPromise,\n  getInternalError,\n  getSdkError,\n  engineEvent,\n  isValidNamespaces,\n  isValidRelays,\n  isValidUrl,\n  isValidRelay,\n  isValidId,\n  isValidParams,\n  isValidString,\n  isValidErrorReason,\n  isValidNamespacesChainId,\n  isValidNamespacesRequest,\n  isValidNamespacesEvent,\n  isValidRequest,\n  isValidEvent,\n  isValidResponse,\n  isValidRequiredNamespaces,\n  isSessionCompatible,\n  isExpired,\n  isUndefined,\n  isConformingNamespaces,\n  isValidController,\n} from \"@walletconnect/utils\";\n\nimport {\n  EXPIRER_EVENTS,\n  SESSION_EXPIRY,\n  PROPOSAL_EXPIRY,\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  public name = ENGINE_CONTEXT;\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.initialized = true;\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidConnect(params);\n    const { pairingTopic, requiredNamespaces, relays } = params;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.pairing.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.createPairing();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n    const proposal = {\n      requiredNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n    };\n\n    const { reject, resolve, done: approval } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = { ...session, requiredNamespaces };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic)\n            await this.client.pairing.update(topic, { peerMetadata: session.peer.metadata });\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest(topic, \"wc_sessionPropose\", proposal);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    this.isInitialized();\n    this.isValidPair(params);\n    const { topic, symKey, relay } = parseUri(params.uri);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const pairing = { topic, relay, expiry, active: false };\n    await this.client.pairing.set(topic, pairing);\n    await this.client.core.crypto.setSymKey(symKey, topic);\n    await this.client.core.relayer.subscribe(topic, { relay });\n    await this.setExpiry(topic, expiry);\n\n    return pairing;\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidApprove(params);\n    const { id, relayProtocol, namespaces } = params;\n    const { pairingTopic, proposer, requiredNamespaces } = this.client.proposal.get(id);\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"iridium\" },\n      namespaces,\n      requiredNamespaces,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: SESSION_EXPIRY,\n    };\n\n    await this.client.core.relayer.subscribe(sessionTopic);\n    const requestId = await this.sendRequest(sessionTopic, \"wc_sessionSettle\", sessionSettle);\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once(engineEvent(\"session_approve\", requestId), ({ error }) => {\n      if (error) reject(error);\n      else resolve(this.client.session.get(sessionTopic));\n    });\n\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, SESSION_EXPIRY);\n    if (pairingTopic)\n      await this.client.pairing.update(pairingTopic, { peerMetadata: session.peer.metadata });\n\n    if (pairingTopic && id) {\n      await this.sendResult<\"wc_sessionPropose\">(id, pairingTopic, {\n        relay: {\n          protocol: relayProtocol ?? \"iridium\",\n        },\n        responderPublicKey: selfPublicKey,\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.activatePairing(pairingTopic);\n    }\n\n    return { topic: sessionTopic, acknowledged };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionUpdate\", { namespaces });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionExtend\", {});\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, SESSION_EXPIRY);\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionRequest\", { request, chainId });\n    const { done, resolve, reject } = createDelayedPromise<T>();\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    return await done();\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult(id, topic, response.result);\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_sessionPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.pairing.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_pairingPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"pairing_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest(topic, \"wc_sessionEvent\", { event, chainId });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_sessionDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deleteSession(topic);\n    } else if (this.client.pairing.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_pairingDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deletePairing(topic);\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private async createPairing() {\n    const symKey = generateRandomBytes32();\n    const topic = await this.client.core.crypto.setSymKey(symKey);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const relay = { protocol: RELAYER_DEFAULT_PROTOCOL };\n    const pairing = { topic, expiry, relay, active: false };\n    const uri = formatUri({\n      protocol: this.client.protocol,\n      version: this.client.version,\n      topic,\n      symKey,\n      relay,\n    });\n    await this.client.pairing.set(topic, pairing);\n    await this.client.core.relayer.subscribe(topic);\n    await this.setExpiry(topic, expiry);\n\n    return { topic, uri };\n  }\n\n  private activatePairing: EnginePrivate[\"activatePairing\"] = async (topic) => {\n    await this.client.pairing.update(topic, { active: true, expiry: PROPOSAL_EXPIRY });\n    await this.setExpiry(topic, PROPOSAL_EXPIRY);\n  };\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic) => {\n    const { self } = this.client.session.get(topic);\n    await Promise.all([\n      this.client.core.relayer.unsubscribe(topic),\n      this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteKeyPair(self.publicKey),\n      this.client.core.crypto.deleteSymKey(topic),\n      this.client.expirer.del(topic),\n    ]);\n  };\n\n  private deletePairing: EnginePrivate[\"deleteSession\"] = async (topic) => {\n    await Promise.all([\n      this.client.core.relayer.unsubscribe(topic),\n      this.client.pairing.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteSymKey(topic),\n      this.client.expirer.del(topic),\n    ]);\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.expirer.del(id),\n    ]);\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.pairing.keys.includes(topic)) {\n      await this.client.pairing.update(topic, { expiry });\n    } else if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.expirer.set(id, proposal.expiry);\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (topic, method, params) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    await this.client.core.relayer.publish(topic, message, opts);\n    this.client.history.set(topic, payload);\n\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    await this.client.core.relayer.publish(topic, message, opts);\n    await this.client.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    await this.client.core.relayer.publish(topic, message, opts);\n    await this.client.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const pairingTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.pairing.getAll().forEach((pairing) => {\n      if (isExpired(pairing.expiry)) pairingTopics.push(pairing.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map(this.deleteSession),\n      ...pairingTopics.map(this.deletePairing),\n      ...proposalIds.map(this.deleteProposal),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n        const payload = await this.client.core.crypto.decode(topic, message);\n        if (isJsonRpcRequest(payload)) {\n          this.client.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.client.history.resolve(payload);\n          this.onRelayEventResponse({ topic, payload });\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_pairingPing\":\n        return this.onPairingPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_pairingDelete\":\n        return this.onPairingDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_pairingPing\":\n        return this.onPairingPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.activatePairing(topic);\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const { relay, controller, expiry, namespaces } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n      };\n      await this.sendResult<\"wc_sessionSettle\">(payload.id, topic, true);\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">(id, topic, true);\n      this.client.events.emit(\"session_update\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, SESSION_EXPIRY);\n      await this.sendResult<\"wc_sessionExtend\">(id, topic, true);\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">(id, topic, true);\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_ping\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n    }\n  };\n\n  private onPairingPingRequest: EnginePrivate[\"onPairingPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_pairingPing\">(id, topic, true);\n      this.client.events.emit(\"pairing_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onPairingPingResponse: EnginePrivate[\"onPairingPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"pairing_ping\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"pairing_ping\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      // RPC request needs to happen before deletion as it utalises session encryption\n      await this.sendResult<\"wc_sessionDelete\">(id, topic, true);\n      await this.deleteSession(topic);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onPairingDeleteRequest: EnginePrivate[\"onPairingDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      // RPC request needs to happen before deletion as it utalises pairing encryption\n      await this.sendResult<\"wc_pairingDelete\">(id, topic, true);\n      await this.deletePairing(topic);\n      this.client.events.emit(\"pairing_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      this.client.events.emit(\"session_request\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic);\n          this.client.events.emit(\"session_expire\", { topic });\n        } else if (this.client.pairing.keys.includes(topic)) {\n          await this.deletePairing(topic);\n          this.client.events.emit(\"pairing_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id);\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private async isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.pairing.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.pairing.get(topic).expiry)) {\n      await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) await this.isValidSessionTopic(topic);\n    else if (this.client.pairing.keys.includes(topic)) await this.isValidPairingTopic(topic);\n    else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, relays } = params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n    const validRequiredNamespacesError = isValidRequiredNamespaces(requiredNamespaces, \"connect()\");\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidPair: EnginePrivate[\"isValidPair\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() params: ${params}`);\n      throw new Error(message);\n    }\n    if (!isValidUrl(params.uri)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri: ${params.uri}`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { generateChildLogger, getLoggerContext } from \"@walletconnect/logger\";\nimport { toMiliseconds } from \"@walletconnect/time\";\nimport { ExpirerTypes, ICore, IExpirer } from \"@walletconnect/types\";\nimport { getInternalError, formatIdTarget, formatTopicTarget } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { Logger } from \"pino\";\nimport {\n  SIGN_CLIENT_STORAGE_PREFIX,\n  EXPIRER_CONTEXT,\n  EXPIRER_EVENTS,\n  EXPIRER_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class Expirer extends IExpirer {\n  public expirations = new Map<string, ExpirerTypes.Expiration>();\n  public events = new EventEmitter();\n  public name = EXPIRER_CONTEXT;\n  public version = EXPIRER_STORAGE_VERSION;\n\n  private cached: ExpirerTypes.Expiration[] = [];\n  private initialized = false;\n\n  private storagePrefix = SIGN_CLIENT_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IExpirer[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((expiration) => this.expirations.set(expiration.target, expiration));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  get length(): number {\n    return this.expirations.size;\n  }\n\n  get keys(): string[] {\n    return Array.from(this.expirations.keys());\n  }\n\n  get values(): ExpirerTypes.Expiration[] {\n    return Array.from(this.expirations.values());\n  }\n\n  public has: IExpirer[\"has\"] = (key) => {\n    try {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      return typeof expiration !== \"undefined\";\n    } catch (e) {\n      // ignore\n      return false;\n    }\n  };\n\n  public set: IExpirer[\"set\"] = (key, expiry) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    const expiration = { target, expiry };\n    this.expirations.set(target, expiration);\n    this.checkExpiry(target, expiration);\n    this.events.emit(EXPIRER_EVENTS.created, {\n      target,\n      expiration,\n    } as ExpirerTypes.Created);\n  };\n\n  public get: IExpirer[\"get\"] = (key) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    return this.getExpiration(target);\n  };\n\n  public del: IExpirer[\"del\"] = (key) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    const exists = this.has(target);\n    if (exists) {\n      const expiration = this.getExpiration(target);\n      this.expirations.delete(target);\n      this.events.emit(EXPIRER_EVENTS.deleted, {\n        target,\n        expiration,\n      } as ExpirerTypes.Deleted);\n    }\n  };\n\n  public on: IExpirer[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IExpirer[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IExpirer[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IExpirer[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private formatTarget(key: string | number) {\n    if (typeof key === \"string\") {\n      return formatTopicTarget(key);\n    } else if (typeof key === \"number\") {\n      return formatIdTarget(key);\n    }\n    const { message } = getInternalError(\"UNKNOWN_TYPE\", `Target type: ${typeof key}`);\n    throw new Error(message);\n  }\n\n  private async setExpirations(expirations: ExpirerTypes.Expiration[]): Promise<void> {\n    await this.core.storage.setItem<ExpirerTypes.Expiration[]>(this.storageKey, expirations);\n  }\n\n  private async getExpirations(): Promise<ExpirerTypes.Expiration[] | undefined> {\n    const expirations = await this.core.storage.getItem<ExpirerTypes.Expiration[]>(this.storageKey);\n    return expirations;\n  }\n\n  private async persist() {\n    await this.setExpirations(this.values);\n    this.events.emit(EXPIRER_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getExpirations();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.expirations.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored expirations for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", expirations: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore expirations for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private getExpiration(target: string): ExpirerTypes.Expiration {\n    const expiration = this.expirations.get(target);\n    if (!expiration) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${target}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return expiration;\n  }\n\n  private checkExpiry(target: string, expiration: ExpirerTypes.Expiration): void {\n    const { expiry } = expiration;\n    const msToTimeout = toMiliseconds(expiry) - Date.now();\n    if (msToTimeout <= 0) this.expire(target, expiration);\n  }\n\n  private expire(target: string, expiration: ExpirerTypes.Expiration): void {\n    this.expirations.delete(target);\n    this.events.emit(EXPIRER_EVENTS.expired, {\n      target,\n      expiration,\n    } as ExpirerTypes.Expired);\n  }\n\n  private checkExpirations(): void {\n    this.expirations.forEach((expiration, target) => this.checkExpiry(target, expiration));\n  }\n\n  private registerEventListeners(): void {\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => this.checkExpirations());\n    this.events.on(EXPIRER_EVENTS.created, (createdEvent: ExpirerTypes.Created) => {\n      const eventName = EXPIRER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.expired, (expiredEvent: ExpirerTypes.Expired) => {\n      const eventName = EXPIRER_EVENTS.expired;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: expiredEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.deleted, (deletedEvent: ExpirerTypes.Deleted) => {\n      const eventName = EXPIRER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nimport { generateChildLogger, getLoggerContext } from \"@walletconnect/logger\";\nimport { IJsonRpcHistory, JsonRpcRecord, RequestEvent, ICore } from \"@walletconnect/types\";\nimport { getInternalError } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { Logger } from \"pino\";\nimport {\n  SIGN_CLIENT_STORAGE_PREFIX,\n  HISTORY_CONTEXT,\n  HISTORY_EVENTS,\n  HISTORY_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class JsonRpcHistory extends IJsonRpcHistory {\n  public records = new Map<number, JsonRpcRecord>();\n  public events = new EventEmitter();\n  public name = HISTORY_CONTEXT;\n  public version = HISTORY_STORAGE_VERSION;\n  private cached: JsonRpcRecord[] = [];\n  private initialized = false;\n\n  private storagePrefix = SIGN_CLIENT_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IJsonRpcHistory[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((record) => this.records.set(record.id, record));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  get size(): number {\n    return this.records.size;\n  }\n\n  get keys(): number[] {\n    return Array.from(this.records.keys());\n  }\n\n  get values() {\n    return Array.from(this.records.values());\n  }\n\n  get pending(): RequestEvent[] {\n    const requests: RequestEvent[] = [];\n    this.values.forEach((record) => {\n      if (typeof record.response !== \"undefined\") return;\n      const requestEvent: RequestEvent = {\n        topic: record.topic,\n        request: formatJsonRpcRequest(record.request.method, record.request.params, record.id),\n        chainId: record.chainId,\n      };\n      return requests.push(requestEvent);\n    });\n    return requests;\n  }\n\n  public set: IJsonRpcHistory[\"set\"] = (topic, request, chainId) => {\n    this.isInitialized();\n    this.logger.debug(`Setting JSON-RPC request history record`);\n    this.logger.trace({ type: \"method\", method: \"set\", topic, request, chainId });\n    if (this.records.has(request.id)) return;\n    const record: JsonRpcRecord = {\n      id: request.id,\n      topic,\n      request: { method: request.method, params: request.params || null },\n      chainId,\n    };\n    this.records.set(record.id, record);\n    this.events.emit(HISTORY_EVENTS.created, record);\n  };\n\n  public resolve: IJsonRpcHistory[\"resolve\"] = async (response) => {\n    this.isInitialized();\n    this.logger.debug(`Updating JSON-RPC response history record`);\n    this.logger.trace({ type: \"method\", method: \"update\", response });\n    if (!this.records.has(response.id)) return;\n    const record = await this.getRecord(response.id);\n    if (typeof record.response !== \"undefined\") return;\n    record.response = isJsonRpcError(response)\n      ? { error: response.error }\n      : { result: response.result };\n    this.records.set(record.id, record);\n    this.events.emit(HISTORY_EVENTS.updated, record);\n  };\n\n  public get: IJsonRpcHistory[\"get\"] = async (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Getting record`);\n    this.logger.trace({ type: \"method\", method: \"get\", topic, id });\n    const record = await this.getRecord(id);\n    if (record.topic !== topic) {\n      const { message } = getInternalError(\"MISMATCHED_TOPIC\", `${this.name}, ${id}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return record;\n  };\n\n  public delete: IJsonRpcHistory[\"delete\"] = (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Deleting record`);\n    this.logger.trace({ type: \"method\", method: \"delete\", id });\n    this.values.forEach((record: JsonRpcRecord) => {\n      if (record.topic === topic) {\n        if (typeof id !== \"undefined\" && record.id !== id) return;\n        this.records.delete(record.id);\n        this.events.emit(HISTORY_EVENTS.deleted, record);\n      }\n    });\n  };\n\n  public exists: IJsonRpcHistory[\"exists\"] = async (topic, id) => {\n    this.isInitialized();\n    if (!this.records.has(id)) return false;\n    const record = await this.getRecord(id);\n    return record.topic === topic;\n  };\n\n  public on: IJsonRpcHistory[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IJsonRpcHistory[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IJsonRpcHistory[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IJsonRpcHistory[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setJsonRpcRecords(records: JsonRpcRecord[]): Promise<void> {\n    await this.core.storage.setItem<JsonRpcRecord[]>(this.storageKey, records);\n  }\n\n  private async getJsonRpcRecords(): Promise<JsonRpcRecord[] | undefined> {\n    const records = await this.core.storage.getItem<JsonRpcRecord[]>(this.storageKey);\n    return records;\n  }\n\n  private getRecord(id: number) {\n    this.isInitialized();\n    const record = this.records.get(id);\n    if (!record) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return record;\n  }\n\n  private async persist() {\n    await this.setJsonRpcRecords(this.values);\n    this.events.emit(HISTORY_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getJsonRpcRecords();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.records.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored records for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", records: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore records for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private registerEventListeners(): void {\n    this.events.on(HISTORY_EVENTS.created, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n    this.events.on(HISTORY_EVENTS.updated, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.updated;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n\n    this.events.on(HISTORY_EVENTS.deleted, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { Logger } from \"pino\";\nimport { Store } from \"@walletconnect/core\";\nimport { ICore, PairingTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PAIRING_CONTEXT } from \"../constants\";\n\nexport class Pairing extends Store<string, PairingTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PAIRING_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Logger } from \"pino\";\nimport { Store } from \"@walletconnect/core\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Logger } from \"pino\";\nimport { Store } from \"@walletconnect/core\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport pino from \"pino\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, Expirer, JsonRpcHistory, Pairing, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public pairing: ISignClient[\"pairing\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public history: ISignClient[\"history\"];\n  public expirer: ISignClient[\"expirer\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.pairing = new Pairing(this.core, this.logger);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.history = new JsonRpcHistory(this.core, this.logger);\n    this.expirer = new Expirer(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.pairing.init();\n      await this.session.init();\n      await this.proposal.init();\n      await this.history.init();\n      await this.expirer.init();\n      await this.engine.init();\n      this.logger.info(`SignClient Initilization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initilization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["e","T","o","r","S","Q","Y","Se","C","I","l","V","N","ie","D","R","v","ue","L","H","A","F","W","m","d","Ee","we","ne","re","b","K","q","ce","oe","ye","G","he","le","ge","de","pe","se","ee","X","B","Z","Re","te","ae","g","c","a","p","x","E","h","n","u","i","t","s","SignClient","w","y"],"mappings":"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"}